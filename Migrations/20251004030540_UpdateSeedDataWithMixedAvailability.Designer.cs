// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToolsBorrow.Data;

#nullable disable

namespace ToolsBorrow.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251004030540_UpdateSeedDataWithMixedAvailability")]
    partial class UpdateSeedDataWithMixedAvailability
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("ToolsBorrow.Models.BorrowRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("RequestDetails")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("RequestId");

                    b.HasIndex("EquipmentId");

                    b.ToTable("BorrowRequests");
                });

            modelBuilder.Entity("ToolsBorrow.Models.Equipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Availability")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("EquipmentId");

                    b.ToTable("Equipment");

                    b.HasData(
                        new
                        {
                            EquipmentId = 1,
                            Availability = true,
                            Description = "Dell Latitude 14-inch",
                            Type = "Laptop"
                        },
                        new
                        {
                            EquipmentId = 2,
                            Availability = false,
                            Description = "MacBook Pro 13-inch",
                            Type = "Laptop"
                        },
                        new
                        {
                            EquipmentId = 3,
                            Availability = true,
                            Description = "iPad Air",
                            Type = "Tablet"
                        },
                        new
                        {
                            EquipmentId = 4,
                            Availability = false,
                            Description = "iPhone 13",
                            Type = "Phone"
                        },
                        new
                        {
                            EquipmentId = 5,
                            Availability = true,
                            Description = "HP EliteBook",
                            Type = "Laptop"
                        },
                        new
                        {
                            EquipmentId = 6,
                            Availability = true,
                            Description = "Samsung Galaxy Tab",
                            Type = "Tablet"
                        },
                        new
                        {
                            EquipmentId = 7,
                            Availability = true,
                            Description = "Projector",
                            Type = "Another"
                        },
                        new
                        {
                            EquipmentId = 8,
                            Availability = true,
                            Description = "Google Pixel",
                            Type = "Phone"
                        });
                });

            modelBuilder.Entity("ToolsBorrow.Models.BorrowRequest", b =>
                {
                    b.HasOne("ToolsBorrow.Models.Equipment", "Equipment")
                        .WithMany("BorrowRequests")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("ToolsBorrow.Models.Equipment", b =>
                {
                    b.Navigation("BorrowRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
